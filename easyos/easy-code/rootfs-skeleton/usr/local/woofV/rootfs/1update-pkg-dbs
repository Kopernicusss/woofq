#!/bin/bash
#based on 0setup

export TEXTDOMAIN=woofV
export OUTPUT_CHARSET=UTF-8
export LANGorig="$LANG"
export LANG=C

E1='/mnt/wkg/data/woofV'
L1='/usr/local/woofV'

. /etc/rc.d/PUPSTATE
. ${L1}/configure/DISTRO_SPECS
. ${L1}/configure/DISTRO_PKGS_SPECS #has PKGS_SPECS_TABLE
. ${L1}/configure/DISTRO_COMPAT_REPOS
. ${L1}/configure/DISTRO_PET_REPOS
. ${L1}/configure/PKGS_MANAGEMENT
. ${L1}/configure/DISTRO_COMPAT_REPOS-oe-kirkstone

FIND_CAT="/usr/local/petget/find_cat"

#somewhere for temp files...
mkdir -p /tmp/woofV
echo -n '' > /tmp/woofV/pkgs-homepages #20240226 cvt.sh called from void0setup
cd /tmp/woofV
touch THISISINTMPWOOFV #void0setup will test this exists.

echo "$(LANG=${LANGorig} gettext 'Downloading latest package databases')"

#download docs on compatible-distro pkgs...
for PKGLISTSPEC in $PKG_DOCS_DISTRO_COMPAT  #see file DISTRO_COMPAT_REPOS
do
 PKGLISTFILE="$(cut -f 3 -d '|' <<<${PKGLISTSPEC})"
 PKGLISTURI="$(cut -f 2 -d '|' <<<${PKGLISTSPEC})"
 DLFILE="${PKGLISTURI##*/}"
 [ "$PKGLISTURI" = "" ] && continue #precaution
 [ -f $DLFILE ] && mv -f $DLFILE /tmp/${DLFILE}-backup1
 echo "$(LANG=${LANGorig} gettext 'Downloading:') ${PKGLISTURI}"
 download_file ${PKGLISTURI}
 if [ $? -ne 0 -o ! -s ${DLFILE} ];then
  echo "$(LANG=${LANGorig} gettext 'ERROR pkg db download failed.')"
  exit 1
 fi
 xDLFILE="$DLFILE"
 #renames x86_64-repodata (which is zstd compressed tarball) to Packages-void-currentpre
 mv -f ${DLFILE} ${PKGLISTFILE}pre
 echo " $(LANG=${LANGorig} gettext '...success')"
done

#and for kirkstone db...
for PKGLISTSPEC in ${OE_PKG_DOCS_DISTRO_COMPAT}  #see file DISTRO_COMPAT_REPOS-oe-kirkstone
do
 PKGLISTFILE="$(cut -f 3 -d '|' <<<${PKGLISTSPEC})"
 PKGLISTURI="$(cut -f 2 -d '|' <<<${PKGLISTSPEC})"
 DLFILE="${PKGLISTURI##*/}"
 [ "$PKGLISTURI" = "" ] && continue #precaution
 [ -f $DLFILE ] && mv -f $DLFILE /tmp/${DLFILE}-backup1
 echo "$(LANG=${LANGorig} gettext 'Downloading:') ${PKGLISTURI}"
 download_file ${PKGLISTURI}
 if [ $? -ne 0 -o ! -s ${DLFILE} ];then
  echo "$(LANG=${LANGorig} gettext 'ERROR pkg db download failed.')"
  exit 1
 fi
 mv -f ${DLFILE} ${L1}/configure/${DLFILE}
 echo " $(LANG=${LANGorig} gettext '...success')"
done

###download pet pkg databases...
for PKGLISTSPEC in $PKG_DOCS_PET_REPOS  #see file DISTRO_PET_REPOS
do
 PKGLISTFILE="$(cut -f 3 -d '|' <<<${PKGLISTSPEC})"
 PKGLISTURI="$(cut -f 2 -d '|' <<<${PKGLISTSPEC})"
 DLFILE="${PKGLISTURI##*/}"
 [ -f $DLFILE ] && mv -f $DLFILE /tmp/${DLFILE}-backup1
 echo "$(LANG=${LANGorig} gettext 'Downloading:') ${PKGLISTURI}"
 download_file ${PKGLISTURI}
 if [ $? -ne 0 -o ! -s ${DLFILE} ];then
  echo "$(LANG=${LANGorig} gettext 'ERROR pkg db download failed.')"
  exit 1
 fi
 mv -f ${DLFILE} ${L1}/configure/${DLFILE}
 echo " $(LANG=${LANGorig} gettext '...success')"
done
sync

#convert pkg database ${PKGLISTFILE}pre to a standard format...
PKGLISTS_COMPAT="`echo "$PKG_DOCS_DISTRO_COMPAT" | tr ' ' '\n' | cut -f 3 -d '|' | tr '\n' ' '`" #see file DISTRO_PKGS_SPECS
for ONE_PKGLISTS_COMPAT in $PKGLISTS_COMPAT
do
 [ ! -f ${ONE_PKGLISTS_COMPAT}pre ] && continue
 echo
 echo "$(LANG=${LANGorig} gettext 'Processing into a standard format:')  ${ONE_PKGLISTS_COMPAT}"
 echo -n "" > $ONE_PKGLISTS_COMPAT
 echo -n "" > ${ONE_PKGLISTS_COMPAT}temp
 export ONE_PKGLISTS_COMPAT
 ${L1}/support/void0setup
 #void0setup sets category field to "uncategorized", so fix...
 ${FIND_CAT} ${ONE_PKGLISTS_COMPAT} > ${ONE_PKGLISTS_COMPAT}temp
 sort --field-separator='|' --key=1 ${ONE_PKGLISTS_COMPAT}temp > ${L1}/configure/${ONE_PKGLISTS_COMPAT}
 rm -f ${ONE_PKGLISTS_COMPAT}temp
 echo " $(LANG=${LANGorig} gettext '...success')"
done
sync
echo "$(LANG=${LANGorig} gettext 'The updated package databases are in /usr/local/woofV/configure')"

#20240226 void0setup calls cvt.sh which writes to /tmp/woofV/pkgs-homepages
if [ -s /tmp/woofV/pkgs-homepages ];then
 cp -f /tmp/woofV/pkgs-homepages ${L1}/configure/PKGS_HOMEPAGES
fi
###end###
