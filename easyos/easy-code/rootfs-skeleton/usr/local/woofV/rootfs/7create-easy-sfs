#!/bin/bash

export TEXTDOMAIN=woofV
export OUTPUT_CHARSET=UTF-8
LANGorig="$LANG"
export LANG=C

. /etc/rc.d/PUPSTATE

E1='/mnt/wkg/data/woofV'
L1='/usr/local/woofV'
mkdir -p /tmp/woofV

. ${E1}/rootfs/etc/DISTRO_SPECS
. ${L1}/configure/build-choices

cd ${E1}
rm -rf export 2>/dev/null
mkdir export

###create easy.sfs###
echo "$(LANG=${LANGorig} gettext 'Creating:') easy.sfs"

#181102 create meta-data for sfs (ref: /usr/local/sfsget/dir2sfs). 181105 fix 181122 fix.
VER="$DISTRO_VERSION"
SIZEK=$(busybox du -s -k rootfs | cut -f 1)
xSIZEK=$((${SIZEK}/2)) #estimate compressed size
echo "Creating meta-data for ${DISTRO_NAME_SHORT,,}..."
echo "#generated by 3buildeasydistro:
SFS_DB_pkgname='${DISTRO_NAME_SHORT,,}_${VER}'
SFS_DB_nameonly='${DISTRO_NAME_SHORT,,}'
SFS_DB_version='${VER}'
SFS_DB_revision=''
SFS_DB_arch='${DISTRO_TARGETARCH}'
SFS_DB_categories='Utility'
SFS_DB_size='${xSIZEK}'
SFS_DB_fullfilename='${DISTRO_NAME_SHORT,,}_${VER}_${DISTRO_TARGETARCH}.sfs'
SFS_DB_dependencies=''
SFS_DB_description='${DISTRO_NAME_NORMAL} base SFS'
SFS_DB_description_long='This is the complete ${DISTRO_NAME_NORMAL} filesystem, the ${DISTRO_COMPAT_VERSION} series.'
SFS_DB_compileddistro='${DISTRO_BINARY_COMPAT}'
SFS_DB_compiledrelease='${DISTRO_COMPAT_VERSION}'
SFS_DB_path='easyos/${DISTRO_BINARY_COMPAT}/${DISTRO_COMPAT_VERSION}'
SFS_DB_apps='${DISTRO_NAME_SHORT,,}'
SFS_DB_icons='${DISTRO_NAME_SHORT,,}'
SFS_DB_install='desk'
SFS_DB_hash=''" > export/${DISTRO_NAME_SHORT,,}_${VER}_${DISTRO_TARGETARCH}.specs

mkdir -p rootfs/.control
cp -a -f export/${DISTRO_NAME_SHORT,,}_${VER}_${DISTRO_TARGETARCH}.specs rootfs/.control/${DISTRO_NAME_SHORT,,}.specs

#icons...
cp -L -f /usr/share/doc/logo48.png ./easy48.png
cp -a -f rootfs/usr/local/lib/X11/pixmaps/ec-overlay48.png ./
pngoverlay-cairo easy48.png ec-overlay48.png ec-easy48.png
mkdir -p rootfs/usr/share/pixmaps
cp -f easy48.png rootfs/usr/share/pixmaps/
mv -f ec-easy48.png rootfs/usr/share/pixmaps/
if [ "${DISTRO_NAME_SHORT,,}" != "easy" ];then
 cp -f rootfs/usr/share/pixmaps/easy48.png rootfs/usr/share/pixmaps/${DISTRO_NAME_SHORT,,}.png
 cp -f rootfs/usr/share/pixmaps/ec-easy48.png rootfs/usr/share/pixmaps/ec-${DISTRO_NAME_SHORT,,}.png
fi
mv -f easy48.png export/${DISTRO_NAME_SHORT,,}.png
rm -f ec-overlay48.png

#dummy .desktop...
mkdir -p rootfs/usr/share/applications
echo "[Desktop Entry]
NoDisplay=true
Name=${DISTRO_COMPAT_VERSION}
Exec=ec-chroot-${DISTRO_COMPAT_VERSION}
Icon=ec-easy48.png
Categories=X-Utility" > rootfs/usr/share/applications/${DISTRO_COMPAT_VERSION}.desktop

#run-script...
#190911 note, have "easy" as a second param here, as that is script inside .control...
# (start-container creates 'ec-run' which will fallback to run .control/easy if $DISTRO_COMPAT_VERSION not in $PATH)
echo "#!/bin/sh
empty -f ec-chroot ${DISTRO_COMPAT_VERSION} ${DISTRO_NAME_SHORT,,}" > rootfs/usr/bin/ec-chroot-${DISTRO_COMPAT_VERSION}
chmod 755 rootfs/usr/bin/ec-chroot-${DISTRO_COMPAT_VERSION}
#***NOTICE*** haven't created .control/easy.configuration (190830: have /usr/local/easy_containers/templates/easy/configuration)

##200605 fix the menu entry for launching EasyOS in container...
##hmmm, forget why have created dummy .desktop above, and below devx.desktop
#mv -f rootfs/usr/share/applications/ec-easy.desktop rootfs/usr/share/applications/ec-${DISTRO_COMPAT_VERSION}.desktop
#sed -i -e "s%\-easy%-${DISTRO_COMPAT_VERSION}%" rootfs/usr/share/applications/ec-${DISTRO_COMPAT_VERSION}.desktop

#181117 scripts in /.control
[ -f rootfs/.control/${DISTRO_NAME_SHORT,,} ] && rm -f rootfs/.control/${DISTRO_NAME_SHORT,,}
cat << 'EOF1' >> rootfs/.control/${DISTRO_NAME_SHORT,,}
#!/bin/sh
#this script generated by 3buildeasydistro in woofQ.
#the way EC works, /.control/ec-run will look for /.control/easy after
# the chroot. See also /usr/local/sfsget/dir2sfs.

#20210505 hack for fatdog, these paths need to be fixed...
#PuppyPin backup...
if [ -d /root/Choices/ROX-Filer ];then #20210508
 if [ -f /root/Choices/ROX-Filer/PuppyPinBACKUP ];then
  touch /root/Choices/ROX-Filer/PuppyPin
  if [ "$(grep 'defaultbrowser' /root/Choices/ROX-Filer/PuppyPin)" == "" ];then
   cp -a -f /root/Choices/ROX-Filer/PuppyPinBACKUP /root/Choices/ROX-Filer/PuppyPin
  fi
 fi
 cp -a -f /root/Choices/ROX-Filer/PuppyPin /root/Choices/ROX-Filer/PuppyPinBACKUP
fi

#181115 xenialpup puppy package manager needs this...
#20210509 hmmm, df-FULL in racy does not understand -m option...
FREEM="$(busybox df -m / | tail -n 1 | tr -s ' ' | cut -f 4 -d ' ')"
echo -n "${FREEM}" > /tmp/pup_event_sizefreem

#unexpected change of screen dimensions may cause desktop drive icons to be displaced...
#20210509 xwininfo tried to open display ":0", fix...
SCRNXY="`xwininfo -display ${DISPLAY} -root | grep -o '\-geometry .*' | tr -s ' ' | cut -f 2 -d ' ' | cut -f 1 -d '+'`"
SCRN_X="`echo -n "$SCRNXY" | cut -f 1 -d 'x'`"
SCRN_Y="`echo -n "$SCRNXY" | cut -f 2 -d 'x'`"
echo -n "$SCRN_X" > /tmp/pup_event_frontend_scrn_x #read by frontend_change.
echo -n "$SCRN_Y" > /tmp/pup_event_frontend_scrn_y #read by frontend_change.
if [ -f /var/local/pup_event_frontend_scrn_x ];then
 oldSCRNX="$(cat /var/local/pup_event_frontend_scrn_x)"
 oldSCRNY="$(cat /var/local/pup_event_frontend_scrn_y)"
 [ "$SCRN_X" != "$oldSCRNX" ] && echo "ICONWIPE" > /var/local/pup_event_icon_change_flag
 [ "$SCRN_Y" != "$oldSCRNY" ] && echo "ICONWIPE" > /var/local/pup_event_icon_change_flag
 #.../var/local/pup_event_icon_change_flag is read by /sbin/clean_desk_icons (see below).
fi
echo -n "$SCRN_X" > /var/local/pup_event_frontend_scrn_x
echo -n "$SCRN_Y" > /var/local/pup_event_frontend_scrn_y

#make sure /usr/local/bin in path:
[ "$(echo -n "$PATH" | grep '/usr/local/bin')" == "" ] && export PATH="/usr/local/bin:${PATH}"

if [ -f /etc/windowmanager ];then #20210508
 WM="$(cat /etc/windowmanager)"
else
 WM="jwm"
fi

#20210509 also launch rox here, instead of in current script...
/usr/bin/desk-delayedrun ${WM} & #this will launch tray applets.

#20210509 start the window manager. when it terminates, the container will exit...
${WM}

###end###
EOF1
chmod 755 rootfs/.control/${DISTRO_NAME_SHORT,,}
chown spot:spot rootfs/.control/${DISTRO_NAME_SHORT,,}

#181117 and the once-only scripts...
#(.run-once-base scripts are run in ec-chroot, before launching the container)
[ -f rootfs/.control/${DISTRO_NAME_SHORT,,}.run-once-base ] && rm -f rootfs/.control/${DISTRO_NAME_SHORT,,}.run-once-base
cat << 'EOF2' >> rootfs/.control/${DISTRO_NAME_SHORT,,}.run-once-base
#!/bin/sh
 #this script generated by /usr/local/sfsget/dir2sfs
 #181115 xenialpup has not precreated the pixbuf cache...
 GDKPIXBUFDIR="$(find /usr/lib* -type d -name 'gdk-pixbuf-2.0' | head -n 1)"
 if [ "${GDKPIXBUFDIR}" ];then
  if [ ! -e ${GDKPIXBUFDIR}/2.10.0/loaders.cache ];then
   gdk-pixbuf-query-loaders --update-cache
  fi
 fi
 #181115 xenialpup already has the icon-theme.cache files, but just in case...
 find /usr/share/icons -mindepth 1 -maxdepth 1 -type d |
 while read ALINE
 do
  [ "${ALINE}" == "" ] && continue
  [ ! -d "${ALINE}"/16x16 ] && continue
  gtk-update-icon-cache -f "${ALINE}"
 done
 #181105 check these...
 #fc-cache -s #regenerate fontconfig caches (in /var/cache/fontconfig).
 if [ -d /usr/share/glib-2.0/schemas ];then
  if [ ! -f /usr/share/glib-2.0/schemas/gschemas.compiled ];then
   if [ -e /usr/bin/glib-compile-schemas ];then
    /usr/bin/glib-compile-schemas /usr/share/glib-2.0/schemas
   fi
  fi
 fi
EOF2
chmod 755 rootfs/.control/${DISTRO_NAME_SHORT,,}.run-once-base
chown spot:spot rootfs/.control/${DISTRO_NAME_SHORT,,}.run-once-base

[ -f rootfs/.control/${DISTRO_NAME_SHORT,,}.run-once-top ] && rm -f rootfs/.control/${DISTRO_NAME_SHORT,,}.run-once-top
cat << 'EOF3' >> rootfs/.control/${DISTRO_NAME_SHORT,,}.run-once-top
#!/bin/sh
 #based on script generated by /usr/local/sfsget/dir2sfs
 #as /root/.xinitrc is not run when chroot into container, this script has some code from it.
 
 #20220212
 UI_DESK_MANAGER='rox' #or jwm
 if [ -f /etc/uimanager ];then
. /etc/uimanager
 fi

 #take out the pre-created "www", "console", "easy" container desktop icons...
 sed -i '/ec\-chroot\-/d' /root/Choices/ROX-Filer/PuppyPin
 #take out these desktop icons also...
 sed -i '/Connect/d' /root/Choices/ROX-Filer/PuppyPin
 sed -i '/EasyShare/d' /root/Choices/ROX-Filer/PuppyPin
 
 #20230607 easy 5.3+ want to get rid of "setup" icon and change "pkg" to only run PKGget (see also dir2sfs)...
 ##190123 must not run sfsget inside a container...
 ##20220606 but do some checking...
 #grep 'sfsget' /root/Choices/ROX-Filer/PuppyPin | grep -q '288'
 #if [ $? -eq 0 ];then
 # sed -i '/sfsget/d' /root/Choices/ROX-Filer/PuppyPin
 # #...that creates a gap, should close it up...
 # sed -i -e 's%x="352"%x="288"%' /root/Choices/ROX-Filer/PuppyPin #setup
 # sed -i -e 's%x="416"%x="352"%' /root/Choices/ROX-Filer/PuppyPin #edit
 # sed -i -e 's%x="480"%x="416"%' /root/Choices/ROX-Filer/PuppyPin #console
 #fi
 grep -q '288.*easysetup' /root/Choices/ROX-Filer/PuppyPin
 if [ $? -eq 0 ];then
  sed -i '/easysetup/d' /root/Choices/ROX-Filer/PuppyPin
  #close up the gap...
  sed -i -e 's%x="352"%x="288"%' /root/Choices/ROX-Filer/PuppyPin #edit
  sed -i -e 's%x="416"%x="352"%' /root/Choices/ROX-Filer/PuppyPin #term
 fi
 #and change run-action of "pkg" icon so will only run PKGget...
 sed -i -e 's%/usr/sbin/pkg-wrap%/usr/sbin/dotpup%' /root/Choices/ROX-Filer/PuppyPin
 
 #20201209 do not want "update" icon on desktop...
 sed -i '/update/d' /root/Choices/ROX-Filer/PuppyPin
 #20220606 do not want "save" icon on desktop (coz containers are save via main desktop "save")...
 sed -i '/save/d' /root/Choices/ROX-Filer/PuppyPin
 #missing, probably good to create it...
 touch /root/.packages/user-installed-packages
 #we need equivalent to /usr/sbin/delayedrun (which starts from /root/.xinitrc), which starts the tray applets.
 #see 'desk-delayedrun' below.
 #181115 xenialpup is launching the tray applets...
 # seems a bit weird, need to delete this...
 [ -d /root/.config/autostart ] && rm -rf /root/.config/autostart/*
 #181105 need to cutout some entries from /etc/xdg/templates/_root_.jwmrc ...
 sed -i '/puppy\-setup\.menu/d' /etc/xdg/templates/_root_.jwmrc
 sed -i '/"Shutdown"/,/^\s*$/{d}' /etc/xdg/templates/_root_.jwmrc #removed entire paragraph.
 sed -i '/label="Exit"/d' /etc/xdg/templates/_root_.jwmrc #181116 xenialpup.
 [ -f /root/.jwm/jwmrc-personal ] && sed -i '/defaultscreenshot/d' /root/.jwm/jwmrc-personal #181116 up-arrow launches screeny.
 [ -f /root/.jwm/jwmrc-personal2 ] && sed -i '/defaultscreenshot/d' /root/.jwm/jwmrc-personal2 #181116 up-arrow launches screeny.
 #have to run fixmenus, but firstly, delete some .desktop files...
 for aDT in appimage BootManagerSTAR easy-STAR ec-STAR childproof cups Desktop-STAR easydd firewall-STAR floppy-STAR gparted Internet-STAR loginmanager MoManagerSTAR MouseSTAR Multiple-Sound-Card-Wizard Partview Pdisk-STAR Pmount-STAR printer-STAR PuddSTAR qsync QuickSetup remove-builtin Set-STAR TopSTAR video-STAR
 do
  rm -f /usr/share/applications/${aDT/STAR/*}.desktop 2>/dev/null
 done
 #and some apps...
 for aDT in bluepup GPartedSTAR gpptp hardinfo pschedule Puppy-Event-Manager PupScanSTAR Pup-SysInfo pupXSTAR xinput_calibrator wcpufreq
 do
  rm -f /usr/share/applications/${aDT/STAR/*}.desktop 2>/dev/null
 done
 #181105 and for some old pups...
 for aDT in Floppy_Formatter Format-floppy-disk Gpptp GrubSTAR legacy_grub_2013 mtp_detect pbackup pgprs-connect PupsaveSTAR Remaster-STAR Resize-personal-storage-file
 do
  rm -f /usr/share/applications/${aDT/STAR/*}.desktop 2>/dev/null
 done
 fixmenus
 #181105 reshape the backround image...
 /usr/sbin/background_reshape
 #...ok for old pups, easyos and quirky need extra code...
 RET1=$?
 if [ $RET1 -eq 11 ];then
  if [ -s /tmp/qwallpaper_reshaped ];then
   NEWIMAGE="`cat /tmp/qwallpaper_reshaped`"
   if [ -f $NEWIMAGE ];then #sanity check.
    #truncated image created, update rox...
    iPTN="s%>.*</backdrop>%>${NEWIMAGE}</backdrop>%"
    sed -i -e "$iPTN" /root/Choices/ROX-Filer/PuppyPin
    if [ "$UI_DESK_MANAGER" == "jwm" ];then #20220212
     jPTN="s%<Background.*%<Background type=\"image\">${NEWIMAGE}</Background>%"
     sed -i -e "$jPTN" /root/.jwm/jwmrc-personal
    fi
   fi
  fi
 fi
 #181115 xenialpup needs fix for desktop install icon...
 if [ -f /usr/sbin/dotpup ];then
  echo '#!/bin/sh
exec /usr/local/petget/pkg_chooser.sh' > /usr/sbin/dotpup
  chmod 755 /usr/sbin/dotpup
 fi
 #20210510 radky's JWMdesk calls 01micko's desksetup.sh, which needs a fix...
 if [ -f /usr/local/desksetup/desksetup.sh ];then
  sed -i -e 's%/usr/local/apps/ROX-Filer/ROX-Filer -p %/usr/local/apps/ROX-Filer/ROX-Filer -n -p %' /usr/local/desksetup/desksetup.sh
 fi
 if [ "$UI_DESK_MANAGER" == "jwm" ];then #20220212
  #populate app icons in /root/.jwmrc-tray ...
  /usr/local/ui/jwm/ec-jwmrc-insert-icons
 fi
###end###
EOF3
chmod 755 rootfs/.control/${DISTRO_NAME_SHORT,,}.run-once-top
chown spot:spot rootfs/.control/${DISTRO_NAME_SHORT,,}.run-once-top

#181117 this also...
[ -f rootfs/usr/bin/desk-delayedrun ] && rm -f rootfs/usr/bin/desk-delayedrun
cat << 'EOF2' >> rootfs/usr/bin/desk-delayedrun
#!/bin/sh
#this script generated by /usr/local/sfsget/dir2sfs
#the sequence is chroot firstly runs .control/ec-run, then .control/$SFS_DB_nameonly.
# the latter script launches desk-delayedrun as a separate process, then starts the
# window manager. name of window manager is passed in.
#20220211 read /etc/uimanager. see also dir2sfs

WM="$1"
[ ! "$WM" ] && WM='jwm'

#20220211
UI_DESK_MANAGER='rox' #or jwm
if [ -f /etc/uimanager ];then
. /etc/uimanager
fi

CR='
'

#give enough time for jwm to start...
KERNMINOR=$(uname -r | cut -f 2 -d '.') #20210407...
if [ $KERNMINOR -ge 10 ];then
 sleep 0.5
else
 sleep 1.5 #must be >2  181217 increase from 3. 190202 increase from 3.5. 190806 increased from 4.
fi
if ! pidof ${WM} >/dev/null ;then sleep 2; fi
if ! pidof ${WM} >/dev/null ;then sleep 4; fi
sleep 0.5

case "$WM" in #20210508
 jwm)
  #start rox...
  #relocates right-side icons to actual right-side of screen...
  if [ -f /root/Choices/ROX-Filer/PuppyPin ];then #20210508
   if [ -x /usr/sbin/fixPuppyPin ];then
    /usr/sbin/fixPuppyPin /root/Choices/ROX-Filer/PuppyPin
   fi
  fi
  cp -f /root/Choices/ROX-Filer/globicons /root/.config/rox.sourceforge.net/ROX-Filer/
  cp -f /root/Choices/ROX-Filer/PuppyPin /root/.config/rox.sourceforge.net/ROX-Filer/
  #put text on background...
  if [ -x /usr/sbin/popup ];then
   popup "level=bottom placement=center background=#06ee9b|<b><big><big>Containerized desk ${CR}Press Alt-F6 to flip</big></big></b>"
  elif [ -x /usr/bin/gtkdialog-splash ];then
   gtkdialog-splash -close never -fontsize large -text "Containerized desk${CR}Press Alt-F6 to flip" &
  elif [ -x /usr/bin/gxmessage ];then #20210505
   gxmessage -center -borderless -nofocus -noescape -buttons "" -fn "Sans 16" "Containerized desk${CR}Press ALT-F6 to flip" &
  fi
  #wallpaper is sometimes corrupted, so take it out of PuppyPin...
  BG="$(grep '<backdrop' /root/Choices/ROX-Filer/PuppyPin | cut -f 2 -d '>' | cut -f 1 -d '<')" #ex: /usr/share/backgrounds/default.jpg
  if [ ! "$BG" ];then
   if [ -s /etc/Puppybackgroundpicture ];then
    BG="$(cut -f 2 -d '"' /etc/Puppybackgroundpicture | cut -f 1 -d '"')"
   else
    BG="/usr/share/backgrounds/$(ls -1 /usr/share/backgrounds | tail -n 1)"
   fi
  fi
  sed -i '/<backdrop/d' /root/Choices/ROX-Filer/PuppyPin
  if [ "$UI_DESK_MANAGER" == "rox" ];then #20220211
   #start ROX-Filer...
   rox -n -p /root/Choices/ROX-Filer/PuppyPin &
  fi
  #after a delay, set the wallpaper...
  sleep 1
  mkdir -p /root/.config/wallpaper #see /usr/sbin/set_bg
  #cannot be sure that target distro has set_bg, or background_reshape...
  if [ -x /usr/sbin/set_bg ];then
   set_bg ${BG}
  else
   if [ "$UI_DESK_MANAGER" == "rox" ];then #20220211
    rox --RPC << EOF
<?xml version="1.0"?>
<env:Envelope xmlns:env="http://www.w3.org/2001/12/soap-envelope">
 <env:Body xmlns="http://rox.sourceforge.net/SOAP/ROX-Filer">
  <SetBackdrop>
   <Filename>${BG}</Filename>
   <Style>Stretched</Style>
  </SetBackdrop>
 </env:Body>
</env:Envelope>

EOF
   fi
  fi
 ;;
 startxfce4) #20210508
  true
 ;;
esac

#now start the tray applets...
if [ -x /root/Startup/pa-applet_tray ];then #20220212
 if ! pidof pa-applet >/dev/null; then
  /usr/bin/pa-applet &
 fi
elif [ -x /root/Startup/pnmixer_tray ];then
 if ! pidof pnmixer >/dev/null; then
  /root/Startup/pnmixer_tray &
 fi
elif [ -x /root/Startup/retrovol_tray ];then
 if ! pidof retrovol >/dev/null; then
  /root/Startup/retrovol_tray &
 fi
elif [ -x /usr/bin/retrovol ];then #181115
 retrovol -hide &
elif [ -x /root/Startup/xfce4-volumed ];then #20210508
 /root/Startup/xfce4-volumed &
fi
###end###
EOF2
chmod 755 rootfs/usr/bin/desk-delayedrun
chown spot:spot rootfs/usr/bin/desk-delayedrun

sync
COMPR_SFS='zstd -Xcompression-level 15'
if [ "$BUILD_CHOICE_SFS_COMPRESSION" ];then
 COMPR_SFS="$BUILD_CHOICE_SFS_COMPRESSION"
fi
[ -f export/easy.sfs ] && rm -f export/easy.sfs
[ -f export/${DISTRO_NAME_SHORT,,}.sfs ] && rm -f export/${DISTRO_NAME_SHORT,,}.sfs
[ -f export/${DISTRO_NAME_SHORT,,}_${VER}_${DISTRO_TARGETARCH}.sfs ] && rm -f export/${DISTRO_NAME_SHORT,,}_${VER}_${DISTRO_TARGETARCH}.sfs
mksquashfs rootfs export/${DISTRO_NAME_SHORT,,}_${VER}_${DISTRO_TARGETARCH}.sfs -comp ${COMPR_SFS} -processors 1
sync

HASH="$(sha256sum export/${DISTRO_NAME_SHORT,,}_${VER}_${DISTRO_TARGETARCH}.sfs | cut -f 1 -d ' ')"
sed -i -e "s%^SFS_DB_hash=.*%SFS_DB_hash='${HASH}'%" export/${DISTRO_NAME_SHORT,,}_${VER}_${DISTRO_TARGETARCH}.specs
#fix exact size...
zSIZEK=$(busybox du -s -k export/${DISTRO_NAME_SHORT,,}_${VER}_${DISTRO_TARGETARCH}.sfs | cut -f 1)
sed -i -e "s%^SFS_DB_size=.*%SFS_DB_size='${zSIZEK}'%" export/${DISTRO_NAME_SHORT,,}_${VER}_${DISTRO_TARGETARCH}.specs

echo "$(LANG=${LANGorig} gettext 'Created:') export/${DISTRO_NAME_SHORT,,}_${VER}_${DISTRO_TARGETARCH}.sfs"
echo "$(LANG=${LANGorig} gettext 'Also:') export/${DISTRO_NAME_SHORT,,}_${VER}_${DISTRO_TARGETARCH}.specs"
echo "$(LANG=${LANGorig} gettext 'Also an icon:') export/${DISTRO_NAME_SHORT,,}.png"
###end###
