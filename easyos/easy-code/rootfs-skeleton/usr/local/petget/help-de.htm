<!DOCTYPE html>
<html lang="de">
<head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<title>PPM Hilfe</title>
<style type="text/css">
body {color:black; background:white;}
#logo {float:right;}
div.wrap {margin:auto;max-width:40em;text-align:left;padding:0 2em;color:black;background:#FFD;}
blockquote.pan {border-left:solid .2em darkgreen; padding-left:1em;background-color:white;}
em,hr {color:darkgreen;font-weight:900}
.translator {font-size:50%;text-align:right;}
</style>
</head>
<body>
<img id="logo" src="/usr/share/pixmaps/easy.png">
<div class="wrap">	

<h1>PETget Paketmanager (PPM)</h1>

<p>Ein "Paket" ist Linux-Terminologie für eine Anwendung. Diese sind online in Repositorien und man kann jedes Paket herunterladen und installieren.</p>

<h2>Wie installieren</h2>

<p>Das gewünschte Repositorium wird mit dem Radio-Button am oberen Rand aktiviert -- normalerweise ist das am weitesten links gezeigte das für die aktuelle Version von Puppy passendste.</p>
<p>Die senkrecht angeordneten Radio-Buttons an der linken Seite ermöglichen die Beschränkung 
  der Anzeige auf eine spezielle Kategorie.</p>
<p>Beachte die Auswahlfelder EXE, DEV, DOC und NLS. Viele Puppy PET-Pakete sind in kleinere Pakete aufgeteilt, wie im folgenden gezeigt:</p>

</blockquote>
EXE: Dies ist die aktuelle Anwendung, wird definitiv gebraucht.<br>
DEV: Dies enthält Entwicklungsdateien, nur interessant für Leute, die Quellcode kompilieren.<br>
DOC: Dies enthält die Dokumentationsdateien des Pakets.<br>
<em>NLS</em>: Dies enthält die Sprachübersetzungdateien des Pakets (Native Language Support).
</blockquote>

<p>Beachte, dass alle Pakete (falls nur das Hauptpaket "EXE" installiert wird) 
	nur englisch "sprechen". Das Paket "NLS" wird andere Sprachen ermöglichen,
	aber das variiert beträchtlich von Paket zu Paket. 
	Einige Pakete haben überhaupt keine Unterstützung anderer Sprachen.<br>
	Beachte, dass PET-Pakete einer Namenskonvention folgen, wie in folgendem Beispiel:</p>

<blockquote>
abiword-1.2.3.pet ("EXE"-Paket)<br>
abiword_DEV-1.2.3.pet<br>
abiword_DOC-1.2.3.pet<br>
abiword_NLS-1.2..pet<br>
</blockquote>

<p>Bitte auch beachten, dass nicht alle Autoren von PET-Paketen der Praxis der Aufteilung von PET-Paketen
	in diese Komponenten folgen. In manchen Fällen mag es zum Beispiel 'abiword-1.2.3.pet' geben,
	das alles enthält. 
    Die Aufteilung in Komponenten wird normalerweise gemacht, um die Größe des Hauptpakets
   ("EXE"-Paket) zu reduzieren.</p>

<p>Wenn man auf eines der Pakete klickt, die in dem großen Fenster gezeigt werden, 
	dann stellt ein anderes Fenster die Frage, ob man das Paket wirklich installieren will, 
	und bietet auch weitere Information zum Paket an -- 
	so kann man mehr darüber erfahren vor der Entscheidung, ob das Paket installiert werden soll.</p>

<h2>Wie deinstallieren</h2>

<p>Wenn ein Paket installiert ist, erscheint es im Fenster unten rechts.<br>Zum deinstallieren einfach darauf klicken. Ein anderes Fenster wird dann Bestätigung der Deinstallation erfragen.</p>

<h2>Paket-Repositorien</h2>

<p>Es gibt verschiedene PET-Repositorien. PET ist das Puppyformat für Pakete, ein Akronym, das für <span style="font-style: italic;">Puppy Extra Treats</span>
 steht. Die angebotenen hängen ab von der benutzten Puppyversion, 
aber gewöhnlich werden wenigstens die folgenden verfügbar 
sein:</p>

<blockquote>
puppy-2: Die sehr alten Puppy 2.x Serien<br>
puppy-3: Puppy 3.x Serien<br>
puppy-4: Puppy 4.x Serien<br>
puppy-5: Puppy 5.x Serien<br>
</blockquote>

<p>Ein aktuelles Puppy wird auch andere haben, wie 'puppy-quirky', 'puppy-wary5', oder 'puppy-lucid'.</p>
<p>Generell sind die zu nutzen, die für das laufende Puppy am passendsten erscheinen. Die älteren&nbsp; haben Pakete, die im laufenden Puppy funktionieren oder auch nicht -- je älter das Repositorium desto wahrscheinlicher, dass das Paket nicht mehr funktioniert.</p>
<p>Wir halten meistens die alten Repositorien verfügbar, da es manchmal ein altes Paket gibt, 
	das man wirklich benutzen möchte. Aber prinzipiell zuerst in die neueren Repositorien schauen.</p>
<p>Dein Puppy mag aus den Paketen einer der anderen größeren Linux-Distributionen, 
	wie Debian, Ubuntu oder Slackware, aufgebaut sein. 
	In diesem Fall, wird PPM jene Repositorien anbieten. 
	Sie werden immer die kompatibelsten sein und diejenigen, in die man zuerst schauen sollte.</p>
<p>Natürlich sind die Pakete anderer Distributionen keine PET-Pakete.
	PETs haben ".pet" am Ende des Dateinamens (Datei-Erweiterung).<br>
	Debian und Ubuntu haben DEB-Pakete mit ".deb" am Ende des Dateinamens.
	Slackware-Pakete haben ".tgz" oder ".txz" Datei-Erweiterung.
	Welcher dieser Pakettypen auch immer, PPM kann es installieren.</p>

<h2>Suchen</h2>

<p>Das "Finden:"-Eingabefeld ermöglicht die Suche nach jeder Datei, es ist aber zu beachten: 
	die Suche geschieht nur innerhalb des momentan selektierten Repositoriums.</p>
<p>Man kann einen Namen zum Teil eingeben, aber es wird nur links beginnende Übereinstimmung gefunden.
	Zum Beispiel wird eine Suche nach <em>pan</em> folgendes Ergebnis liefern:</p>

<blockquote class="pan">
<p>pango-1.28.1-w5 Library for layout and rendering of internationalized text</p>
<p>pango_DOC-1.28.1-w5 Library for layout and rendering of internationalized text</p>
<p>pangomm-2.26.2-w5 oo wrapper for pango library</p>
<p>pangomm_DOC-2.26.2-w5 oo wrapper for pango library</p>
<p>panoramixproto-1.1-w5 Panoramix extension headers</p>
</blockquote>

<p>Aber eine Suche nach <em>mm</em> bringt nichts, da es kein Paket gibt, dessen Name mit mm beginnt.</p>
<p>Jedoch akzeptiert das "Finden"-Eingabefeld&nbsp; *. 
	Also wird die Eingabe von *mm alle Pakete finden, die mm irgendwo in ihrem Namen haben.</p>
<p>Man kann sogar * mehrfach benutzen, beispielsweise wird p*mix*to das Paket panoramixproto finden.</p>
<p>Die Suche ist unabhängig von Groß- oder Kleinschreibung: 
	Eine Suche nach PAN&nbsp; wird dasselbe Ergebnis liefern wie die Suche nach pan.</p>
<p>Noch etwas ist bei der Suche zu beachten: 
	Selektierte Kategorien werden ignoriert, es wird immer das gesamte Repositorium durchsucht.</p>
      
<h2>Installieren ohne PPM</h2>

<p>Man kann aktuell jedwedes Paket herunterladen, egal von woher, und es installieren.
	Alles, was man tun muss, ist ein Klick auf das Paket im Fenster des Datei-Managers, und die Paket-Installierer-Komponente von PPM wird starten und das Paket installieren. 
	Das funktioniert für viele Paket-Typen inclusive PETs, Ubuntu/Debian-DEBs, Slackware-, und Arch-Pakete.</p>
<p>Es ist jedoch zu beachten, wenn man ein individuellles Paket in dieser Weise installiert, 
	ohne durch die PPM-Schnittstelle zu gehen, dann werden keine abhängigen Pakete installiert, 
    und man muss sich deshalb selbst darum kümmern.</p>
<p>Ein Gutes: Ein auf diese Weise installiertes Paket wird im PPM 
	im Fenster "Installierte Pakete" angezeigt und kann somit leicht deinstalliert werden.</p>

<h2>So wird Puppy auf die nächste Version aktualisiert</h2>

<p>Vor einiger Zeit kritisierte jemand PPM und erklärte, dass es kein vollständiges Upgrade von Puppy auf die nächste Version erlaube. Mit den Paketmanagern einiger Distributionen können Sie alle Pakete installieren, die für ein vollständiges Upgrade auf die neueste Version der Distribution erforderlich sind.</p>

<p>PPM bietet das nicht an, weil Puppy <em>nicht so</em> funktioniert. Es liegt außerhalb des Bereichs, oder wir können sagen des "Vertrags", dessen, was PPM tun muss. Eine neue Version von Puppy ist in nur drei oder vier Dateien enthalten. Angenommen, Sie haben eine "frugale" Installation von Puppy auf der Festplatte. Diese besteht aus nur drei Dateien, vmlinuz, initrd.gz und dem Haupt-Puppy-Dateisystem (zum Beispiel precise-5.3.sfs). Es gibt auch eine vierte Datei, die als "devx" bekannt ist (zum Beispiel devx_precise_5.3.sfs). Für ein Upgrade müssen Sie nur diese Dateien ersetzen. Es ist ein völlig anderes System als ein Paket-für-Paket-Upgrade. Diese Seite enthält weitere Details: http://puppylinux.com/hard-puppy.htm.</p>

<p>Regards,<br>
	Barry Kauler, May 2012</p>

</div>
	
<p class="translator">von L18L im Januar 2019 übersetzt aus dem <a href="help.htm">englischen Original</a> </p>

</body>
</html>